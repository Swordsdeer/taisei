#!/usr/bin/env python3

# this needs to be run every time
# - there is a new file containing translated strings
# - there is a new bgm or the tags in a bgm change

import argparse
import glob
import subprocess
import json

parser = argparse.ArgumentParser(description='Generate the POTFILES file for gettext')

parser.add_argument('-o', '--output', required=True, help='destination path for POTFILES')
args = parser.parse_args()

def bgm_tags(filename):
    result = subprocess.run(['ffprobe', '-output_format', 'json', '-show_entries', 'tags', filename], capture_output=True, text=True, check=True)

    return json.loads(result.stdout)['streams'][0]['tags']

def collect_bgm_tags(filenames):
    tags = []

    for filename in filenames:
        r = bgm_tags(filename)
        tags.append(r["TITLE"])
        tags.append(r["ARTIST"])
        tags.append(r["ALBUM"])
        tags.append(r["comment"])

    return tags

def write_fake_file(output):
    strings = collect_bgm_tags(glob.iglob("resources/00-taisei.pkgdir/bgm/*.opus"))

    with open(output, 'w') as f:
        f.write("// this is an autogenerated fake-C file to make xgettext pick up some translation strings\n")
        for s in strings:
            f.write(f'_({json.dumps(s,ensure_ascii=False)})\n')

write_fake_file('po/extra_strings.c')

with open(args.output, 'w') as f:
    f.write("\n".join(glob.iglob("src/**/*.c",recursive=True)))
    f.write("\n")
    f.write("\n".join(glob.iglob("src/**/*.h",recursive=True)))
    f.write('\npo/extra_strings.c\n')

